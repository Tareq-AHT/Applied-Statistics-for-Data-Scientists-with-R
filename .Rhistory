# Task 1 ------------------------------------------------------------------
# Read the data from the folder using suitable function into a variable named "df1"
# You will find details of the variables in the excel sheet named "Data Dictionary"
#___________________________________Solution____________________________________
setwd("C:\Users\IT BD\Desktop\Programming\L07 - Assignment 1 on Class 1 to Class 7\Data")
# Task 1 ------------------------------------------------------------------
# Read the data from the folder using suitable function into a variable named "df1"
# You will find details of the variables in the excel sheet named "Data Dictionary"
#___________________________________Solution____________________________________
setwd("C:/Users/IT BD/Desktop/Programming/L07 - Assignment 1 on Class 1 to Class 7/Data")
install.packages("readxl")
#install.packages("readxl")
library(readxl)
df1
df1 <- read_xlsx("data/StudentSurveyData.xlsx")
df1 <- read_xlsx("StudentSurveyData.xlsx")
df1.head()
View(df1)
df1 <- read_xlsx("StudentSurveyData.xlsx")
df1
df1.head()
dir()
head(df1)
str(df1)
# Task 3 ------------------------------------------------------------------
# See summary of the data frame
#___________________________________Solution____________________________________
summary(df1)
# Task 4 ------------------------------------------------------------------
# (1) Use the function unique() to see the unique categories in the Major column of the data frame.
#___________________________________Solution____________________________________
unique(df1)
# Task 4 ------------------------------------------------------------------
# (1) Use the function unique() to see the unique categories in the Major column of the data frame.
#___________________________________Solution____________________________________
?unique(df1)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
#install.packages("readxl")
library(readxl)
head(df1)
str(df1)
# Task 3 ------------------------------------------------------------------
# See summary of the data frame
#___________________________________Solution____________________________________
summary(df1)
# Task 4 ------------------------------------------------------------------
# (1) Use the function unique() to see the unique categories in the Major column of the data frame.
#___________________________________Solution____________________________________
unique(df1$Major)
# (2) Use the function table() to see the frequency of each category in Major column in the data frame.
#___________________________________Solution____________________________________
table(df1$Major)
# (2) Use the function table() to see the frequency of each category in Major column in the data frame.
#___________________________________Solution____________________________________
table(df1$Major)
# (2) Use the function table() to see the frequency of each category in Major column in the data frame.
#___________________________________Solution____________________________________
table(df1$Major)
# Task 5 ------------------------------------------------------------------
# Create a new data frame named df2, where the "IS" category in Major column is replaced by "Information Systems"
#___________________________________Solution____________________________________
df2 <- replace(df1$Major,"IS", "Information System")
df2
head(df2)
View(df1)
# Task 5 ------------------------------------------------------------------
# Create a new data frame named df2, where the "IS" category in Major column is replaced by "Information Systems"
#___________________________________Solution____________________________________
install.packages("dplyr")
library(dplyr)
df2 <- df1 %>%
mutate(Major = ifelse(Major == "IS", "Information System", Major)
df2
df2 <- df1 %>%
mutate(Major = ifelse(Major == "IS", "Information System", Major))
df2
View(df2)
# Check frequency of categories in Major column again.
#___________________________________Solution____________________________________
table(df2$Major)
# Task 5 ------------------------------------------------------------------
# Run the following code ONLY ONCE (DO NOT CHANGE ANYTHING).
set.seed(2025)
df2$Spending[sample(nrow(df2), nrow(df2) * 0.05)] <- NA  # introduces 5% missing values
df2$`Text Messages`[sample(nrow(df2), nrow(df2) * 0.1)] <- NA  # introduces 10% missing values
data_na_count <- function(df2) {
return(sum(is.na(df2)))
}
data_na_count
# Create a function called 'data_na_count' with one argument (data) that returns
#___________________________________Solution____________________________________
any(is.na(df2))
sum(any(is.na(df2)))
data_na_count <- function(df2$ID) {
return(sum(is.na(df2$ID)))
# How many missing values are there in the Spending column of the df_male data frame?
# Your answer:
any(is.na(df2$Spending))
sum(any(is.na(df2$Spending)))
df3 <- df[df2$Gender == "Male", ]
df3 <- df[df2$Gender == "Male" ]
df3 <- df2[df2$Gender == "Male", ]
df3 <- df2[df2$Gender == "Male", ]
df3
# How many missing values are there in the Spending column of the df_male data frame?
# Your answer:
any(is.na(df3$Spending))
sum(any(is.na(df3$Spending)))
#___________________________________Solution____________________________________
df2
top_3 <- df2 %>%
aggrange(GPA)
top_3 <- df2 %>%
arrange(GPA)
top_3
View(top_3)
top_3 <- df2 %>%
arrange(desc(GPA))
top_3
head(top_3,3)
top_3 <- df2 %>%
arrange(desc(GPA)) %>%
slice_head(n = 3)
top_3 <- df2 %>%
arrange(desc(GPA)) %>%
slice_head(n = 3)
top_3
